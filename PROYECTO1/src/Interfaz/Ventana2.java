/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import Codigo.Tablero;
import java.awt.HeadlessException;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Clase que representa la ventana de selección de partida.
 * Esta ventana permite al usuario elegir el archivo para cargar una partida existente.
 * También incluye la opción de volver al menú principal.
 * @author edusye
 */
public class Ventana2 extends javax.swing.JFrame {

    /**
     * Constructor de la clase Ventana2.
     * Inicializa todos los componentes de la interfaz gráfica.
     */
    public Ventana2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        VOLVER = new javax.swing.JButton();
        CARGAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        VOLVER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Imagenes/Volver.jpg"))); // NOI18N
        VOLVER.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VOLVER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VOLVERMouseClicked(evt);
            }
        });
        jPanel1.add(VOLVER, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 50, 50));

        CARGAR.setBackground(new java.awt.Color(0, 204, 102));
        CARGAR.setFont(new java.awt.Font("Colonna MT", 1, 48)); // NOI18N
        CARGAR.setText("CARGAR ARCHIVO");
        CARGAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CARGARMouseClicked(evt);
            }
        });
        jPanel1.add(CARGAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Maneja el evento de clic del botón VOLVER.
     * Oculta la ventana actual y regresa al menú principal (Ventana1).
     * 
     * @param evt 
    */
    private void VOLVERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VOLVERMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        Ventana1 v1 = new Ventana1();
        v1.setLocationRelativeTo(null);
        v1.setVisible(true);
    }//GEN-LAST:event_VOLVERMouseClicked
    
    /**
     * Maneja el evento de clic del botón CARGAR ARCHIVO.
     * Abre un JFileChooser para seleccionar un archivo de texto y procesa los datos.
     * 
     * @param evt Evento del mouse
     */  
    private void CARGARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CARGARMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Archivos de texto (*.txt)", "txt");
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("Seleccionar archivo de sopa de letras");
        int resultado = fileChooser.showOpenDialog(this);
        
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            
            try {
                // Crear una instancia de Tablero para procesar los datos
                Tablero tablero = new Tablero();
                
                boolean cargaExitosa = tablero.cargarArchivo(archivoSeleccionado.getAbsolutePath());
                
                if (cargaExitosa) {

                    JOptionPane.showMessageDialog(this, 
                        "Archivo cargado exitosamente.\n" +
                        "Tablero: " + tablero.getTamaño() + "x" + tablero.getTamaño() + "\n" +
                        "Palabras en diccionario: " + tablero.getCantidadPalabras(),
                        "Carga Exitosa", 
                        JOptionPane.INFORMATION_MESSAGE);
                    
                    abrirVentana4(tablero);
                    
                    } else {
                    JOptionPane.showMessageDialog(this, 
                        "Error al cargar el archivo.\n" +
                        "Verifique que el formato sea correcto:\n" +
                        "- Diccionario entre etiquetas 'dic' y '/dic'\n" +
                        "- Tablero entre etiquetas 'tab' y '/tab'\n" +
                        "- 16 letras separadas por comas en el tablero",
                        "Error de Carga", 
                        JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (HeadlessException e) {
                // Manejar cualquier excepción durante la carga
                JOptionPane.showMessageDialog(this, 
                    "Error inesperado al procesar el archivo:\n" + e.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
            
        } else if (resultado == JFileChooser.CANCEL_OPTION) {
            // El usuario canceló la selección - no hacer nada
        } else {
            JOptionPane.showMessageDialog(this, 
                "Error al abrir el selector de archivos.",
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CARGARMouseClicked
    
    /**
     * Abre la Ventana4 (ventana del tablero) con el tablero cargado.
     * 
     * @param tablero instancia del tablero con los datos cargados
     */
    private void abrirVentana4(Tablero tablero) {
        try {

            this.setVisible(false);
            
            Ventana4 ventana4 = new Ventana4(tablero);
            ventana4.setLocationRelativeTo(null);
            ventana4.setVisible(true);
            
        } catch (Exception e) {

            this.setVisible(true);
            JOptionPane.showMessageDialog(this, 
                "Error al abrir la ventana del tablero:\n" + e.getMessage(),
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CARGAR;
    private javax.swing.JButton VOLVER;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
